720c720
< std::string GetGroupMapKeyFromPath(cmGeneratorTarget* target,
---
> std::string GetGroupMapKeyFromPath(cmGeneratorTarget const* target,
1336a1337,1380
>   // Enumrate "Link Binary With Libraries"
>   std::vector<std::string> linkbins;
>   for (auto const& configName : this->CurrentConfigurationTypes) {
>     cmComputeLinkInformation* pcli = gtgt->GetLinkInformation(configName);
>     if (!pcli) {
>       continue;
>     }
> 	for (auto const& libName : pcli->GetItems()) {
>       auto pos = libName.Value.find_last_of('/');
>       if (pos == std::string::npos) {
>         continue;
>       }
> 	  auto stem = libName.Value.substr(pos + 1);
> 	  auto key = GetGroupMapKeyFromPath(libName.Target, stem);
> 	  auto it = std::find(linkbins.begin(), linkbins.end(), key);
> 	  if (it == linkbins.end())
> 	  {
> 	  	linkbins.push_back(key);
> 	  }
>       cmXCodeObject* fileRef = nullptr;
>       auto refit = this->FileRefs.find(key);
>       if (refit == this->FileRefs.end())
>       {
>         fileRef = this->CreateObject(cmXCodeObject::PBXFileReference);
>         fileRef->SetComment(stem);
>         this->FileRefs[key] = fileRef;
>       }
>       else
>       {
>         fileRef = refit->second;
>       }
>       cmXCodeObject* group = this->GroupMap[key];
> 
>       fileRef->AddAttribute("explicitFileType", this->CreateString("archive.ar"));
>       fileRef->AddAttribute("name", this->CreateString(stem));
>       fileRef->AddAttribute("path", this->CreateString(stem));
>       fileRef->AddAttribute("sourceTree", this->CreateString("BUILT_PRODUCTS_DIR"));
> 
>       cmXCodeObject* buildFile = this->CreateObject(cmXCodeObject::PBXBuildFile);
>       buildFile->SetComment(stem);
>       buildFile->AddAttribute("fileRef", this->CreateObjectReference(fileRef));
> 	}
>   }
> 
1339c1383
<   if (!externalObjFiles.empty()) {
---
>   if (!externalObjFiles.empty() || !linkbins.empty()) {
1349a1394,1403
> 
>     // Add "Link Binary With Libraries"
>     for (const auto& key : linkbins) {
> 	  auto fileRef = this->FileRefs[key];
> 	  cmXCodeObject* buildFile = this->CreateObject(cmXCodeObject::PBXBuildFile);
> 	  buildFile->SetComment(fileRef->GetComment());
> 	  buildFile->AddAttribute("fileRef", this->CreateObjectReference(fileRef));
>       buildFiles->AddObject(buildFile);
>     }
> 
1959d2012
<   buildSettings->AddAttribute("SYMROOT", this->CreateString(pndir));
2320a2374,2375
> #ifdef	XCODE11_NO_IOS_PATCH
>   // INSTALL_PATH use xcode default.
2322a2378
> #endif
2806a2863
> #ifdef	XCODE11_NO_IOS_PATCH
2827a2885
> #endif
3128,3130d3185
< 
<   std::string symroot = cmStrCat(root->GetCurrentBinaryDirectory(), "/build");
<   buildSettings->AddAttribute("SYMROOT", this->CreateString(symroot));
